// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  bio       String?
  role      UserRole @default(author)
  posts     Post[]
  heavenletters Heavenletter[]
  translations Translation[]
  createdAt DateTime @default(now())

  @@map("ks_user")
}

model Heavenletter {
  id          String       @id @default(cuid())
  number      Int          @unique
  title       String
  body        String
  status      HeavenletterStatus @default(draft)
  publishedAt DateTime?
  authorId    String?
  author      User?        @relation(fields: [authorId], references: [id], onDelete: SetNull)
  translations Translation[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map("ks_heavenletter")
  @@index([number, status])
}

model Translation {
  id               String   @id @default(cuid())
  languageCode     String   // ISO language code (en, de, es, fr, it, etc.)
  translatedTitle  String
  translatedBody   String
  translatorId     String?
  translator       User?    @relation(fields: [translatorId], references: [id], onDelete: SetNull)
  heavenletterId   String
  heavenletter     Heavenletter @relation(fields: [heavenletterId], references: [id], onDelete: Cascade)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("ks_translation")
  @@unique([heavenletterId, languageCode])
  @@index([languageCode, translatorId])
}

model Post {
  id          String     @id @default(cuid())
  title       String
  content     String?
  status      PostStatus @default(draft)
  authorId    String?
  author      User?      @relation(fields: [authorId], references: [id], onDelete: SetNull)
  tags        Tag[]
  createdAt   DateTime   @default(now())
  publishedAt DateTime?

  @@map("ks_post")
}

model Tag {
  id       String @id @default(cuid())
  name     String
  posts    Post[]
  createAt DateTime @default(now())

  @@map("ks_tag")
}

enum UserRole {
  admin
  author
  translator
}

enum HeavenletterStatus {
  draft
  published
  archived
}

enum PostStatus {
  draft
  published
}