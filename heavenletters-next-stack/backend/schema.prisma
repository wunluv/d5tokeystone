// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                      String         @id @default(cuid())
  name                    String         @default("")
  email                   String         @unique @default("")
  password                String
  bio                     String         @default("")
  role                    String?        @default("author")
  posts                   Post[]         @relation("Post_author")
  heavenletters           Heavenletter[] @relation("Heavenletter_author")
  translations            Translation[]  @relation("Translation_translator")
  lastLogin               DateTime?
  isActive                String?        @default("true")
  createdAt               DateTime?      @default(now())
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?
}

model Heavenletter {
  id           String        @id @default(cuid())
  number       Int           @unique
  title        String        @default("")
  body         String        @default("")
  status       String?       @default("draft")
  publishedAt  DateTime?
  author       User?         @relation("Heavenletter_author", fields: [authorId], references: [id])
  authorId     String?       @map("author")
  translations Translation[] @relation("Translation_heavenletter")
  createdAt    DateTime?     @default(now())
  updatedAt    DateTime?     @default(now())

  @@index([authorId])
}

model Translation {
  id              String        @id @default(cuid())
  languageCode    String
  translatedTitle String        @default("")
  translatedBody  String        @default("")
  translator      User?         @relation("Translation_translator", fields: [translatorId], references: [id])
  translatorId    String?       @map("translator")
  status          String?       @default("draft")
  heavenletter    Heavenletter? @relation("Translation_heavenletter", fields: [heavenletterId], references: [id])
  heavenletterId  String?       @map("heavenletter")
  createdAt       DateTime?     @default(now())
  updatedAt       DateTime?     @default(now())

  @@index([translatorId])
  @@index([heavenletterId])
}

model Post {
  id          String    @id @default(cuid())
  title       String    @default("")
  content     String    @default("")
  status      String?   @default("draft")
  author      User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId    String?   @map("author")
  tags        Tag[]     @relation("Post_tags")
  createdAt   DateTime? @default(now())
  publishedAt DateTime?

  @@index([authorId])
}

model Tag {
  id        String    @id @default(cuid())
  name      String    @default("")
  posts     Post[]    @relation("Post_tags")
  createdAt DateTime? @default(now())
}
