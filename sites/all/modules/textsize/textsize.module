<?php
// $Id: textsize.module,v 1.3 2008/03/11 19:16:12 christianzwahlen Exp $

/**
 * @file
 * Display a text size changer on the page for better web accessibility.
 */

/**
 * Implementation of hook_help().
 */
function textsize_help($section='') {
  $output = '';
  switch ($section) {
    case 'admin/help#textsize':
      $output='<p>'. t('This module display a text size changer in a block for better web accessibility. The module is a complete <abbr title="PHP: Hypertext Preprocessor">PHP</abbr> module and use no JavaScript or <abbr title="MySQL">MySQL</abbr>. Cookies are required, for saving the style in old browsers.') .'</p>'."\n";
      $output .= '<h3>'. t('Features') .'</h3>'."\n";
      $output .= '<ul>'."\n";
      $output .= '<li>'. t('<abbr lang="de" xml:lang="de" title="Barrierefreie Informationstechnik-Verordnung">BITV</abbr> conform. More Information on: ') . l('bundesrecht.juris.de', 'http://bundesrecht.juris.de/bitv/anlage_8.html') .'. '. t('Keep the conditions: ') ."\n";
      $output .= '  <ol>'."\n";
      $output .= '  <li>'. t('<abbr lang="de" xml:lang="de" title="Barrierefreie Informationstechnik-Verordnung">BITV</abbr> 1.1 (alt text in the images).') .'</li>'."\n";
      $output .= '  <li>'. t('<abbr lang="de" xml:lang="de" title="Barrierefreie Informationstechnik-Verordnung">BITV</abbr> 3.1 (standard links with text and not images).') .'</li>'."\n";
      $output .= '  <li>'. t('<abbr lang="de" xml:lang="de" title="Barrierefreie Informationstechnik-Verordnung">BITV</abbr> 6.3 (no JavaScript rquired).') .'</li>'."\n";
      $output .= '  <li>'. t('<abbr lang="de" xml:lang="de" title="Barrierefreie Informationstechnik-Verordnung">BITV</abbr> 11.1 (open and standard code).') .'</li>'."\n";
      $output .= '  <li>'. t('<abbr lang="de" xml:lang="de" title="Barrierefreie Informationstechnik-Verordnung">BITV</abbr> 13.6 (links in a list).') .'</li>'."\n";
      $output .= '  </ol>'."\n";
      $output .= '</li>'."\n";
      $output .= '<li>'. t('No Javascript required.') .'</li>'."\n";
      $output .= '<li>'. t('No <abbr xml:lang="en" title="Cascading Style Sheet" lang="en">CSS</abbr> required') .'</li>'."\n";
      $output .= '<li>'. t('No images in the code (<abbr xml:lang="en" title="Cascading Style Sheet" lang="en">CSS</abbr> generated), only one link text (for example "Increase").') .'</li>'."\n";
      $output .= '<li>'. t('Uniform markin of menu, based on the open source browser <a href="http://www.mozilla.com/en-US/firefox/">Firefox 2.0</a>.') .'</li>'."\n";
      $output .= '<li>'. t('<abbr lang="en" xml:lang="en" title="Portable Network Graphics">PNG</abbr> images for new browsers and <abbr lang="en" xml:lang="en" title="Graphic Interchange Format">GIF</abbr> images for old browsers (Internet Explorer 6).') .'</li>'."\n";
      $output .= '<li>'. t('Tested themes: Bluemarine, Garland.') .'</li>'."\n";
      $output .= '<li>'. t('Design editable with the function: "theme_textsize_html()" in template.php.') .'</li>'."\n";
      $output .= '</ul>'."\n";
      $output .='<h3>'. t('Global settings') .'</h3>'."\n";
      $output .='<p>'. t('Show or hide description in the links') .': '. t('By hide text in the links, it shows only the logos in a line.') .' '. t('Screen readers can anymore read the text link.') .'</p>'."\n";
      $output .='<p>'. t('The <abbr lang="en" xml:lang="en" title="Portable Network Graphics">PNG</abbr> and <abbr lang="en" xml:lang="en" title="Graphic Interchange Format">GIF</abbr> images are in the directory "/modules/textsize/images/" and the source file in "/modules/textsize/images/source/".') .'</p>'."\n";
      $output .='<p>'. t('Show or hide current text size') .': '. t('By hide current text size, it shows no text and code.') .'</p>'."\n";
      $output .= '<h3>'. t('Advanced settings') .'</h3>'."\n";
      $output .= '<p>'. t('Increases/decreases step') .': '. t('Percentage by which each click increases/decreases the text size. The value have to be between 1-50&#037; and a number.') .'</p><p>'. t('Text Size Normal') .': '. t('The default normal text size is 100&#037;. The value have to be between 10-200&#037; and a number.') .'</p>'."\n";
      $output .= '<h3>'. t('Important information') .'</h3>'."\n";
      $output .= '<p class="warning">'. t('Warning: For Internet Explorer: Your theme have to use font sitze with "em" or "%", not pixel or points!') .'</p>'."\n";
      $output .= '<p class="icon info">'. t('If you are using a theme with "font-size 0.9em" in the CSS (like the garland theme), set the text size normal to 90%.') .'</p>'."\n";
      break;
  }
  return $output;
}

/**
 * Implementation of hook_perm().
 */
function textsize_perm() {
  return array('administer textsize', 'access textsize content');
}

/**
 *  Implementation of hook_menu()
 */
function textsize_menu($may_cache) {
  $items = array();
  if ($may_cache) {
    $items[] = array(
    'path' => 'admin/settings/textsize',
    'title' => t('Text Size configuration'),
    'description' => t('Settings for the display and values.'),
    'access callback'   => 'user_access',
    'callback' => 'drupal_get_form',
    'callback arguments' => array('textsize_admin_settings'),
    'access' => user_access('administer textsize')  
    );  
  }
  return $items;
}

/**
 *  Administration page (menu callback)
 */
function textsize_admin_settings() {
  $textsize_text = array(
    'increase' => t('Increase'),
    'decrease' => t('Decrease'),
    'normal' => t('Normal')
  );
  $form['textsize'] = array(
    '#type' => 'fieldset',
    '#title' => t('Global settings'),
    '#collapsible' => true,
    '#collapsed' => false,
  );
  $form['textsize']['textsize_images'] = array(
    '#type' => 'radios',
    '#title' => t('Link display'),
    '#options' => array(
      t('Links in a list') .' [1]',
      t('Links not in a list') .' [2]',
      t('Links in a list, images in the <abbr lang="en" xml:lang="en" title="Extensible Hypertext Markup Language">XHTML</abbr> source code.') .' [3]',
      t('Links not in a list, images in the <abbr lang="en" xml:lang="en" title="Extensible Hypertext Markup Language">XHTML</abbr> source code') .' [2][3]',
  ),
    '#default_value' => variable_get('textsize_images', 0), // default to show text links.
    '#description' => '[1] '. t('Images are showed with <abbr lang="en" xml:lang="en" title="Cascading Style Sheets">CSS</abbr>.') .' <span class="ok">'. t('For Web Accessibility') .'</span><br />[2] '.'<span class="warning">'. t('Warning: Links ar not in a list! Not for: <abbr lang="de" xml:lang="de" title="Barrierefreie Informationstechnik-Verordnung">BITV</abbr> 13.6!') .'</span><br />[3] '. t('No Link text, only images in the <abbr lang="en" xml:lang="en" title="Extensible Hypertext Markup Language">XHTML</abbr> source code with standard 0 pixel margin.') .' <span class="warning">'. t('Warning: Not for: <abbr lang="de" xml:lang="de" title="Barrierefreie Informationstechnik-Verordnung">BITV</abbr> 3.1! No hover action!') .'</span>',
  );

  $form['textsize']['textsize_list_inline'] = array(
    '#type' => 'select',
    '#title' => t('List display'),
    '#options' => array(
      '' => t('normal'),
      '_inline' => t('inline'),
    ),
    '#default_value' => variable_get('textsize_list_inline', ''),
    '#description' => t('Set the display of the list.'),
  );
  $form['textsize']['textsize_hidden'] = array(
    '#type' => 'radios',
    '#title' => t('Text display'),
    '#options' => array(
      '' => t('Show text in the links'),
      'display_hidden' => t('Hide text in the links') .' [4]',
  ),
    '#default_value' => variable_get('textsize_hidden', ''), // default to show text links.
    '#description' => t('By hide text in the links, it shows only the logos.') .' <br/>[4] <span class="icon info">'. t('Not for links with images in the <abbr lang="en" xml:lang="en" title="Extensible Hypertext Markup Language">XHTML</abbr> source code.') .'</span>',
  );

  $form['textsize']['textsize_current'] = array(
    '#type' => 'radios',
    '#title' => t('Current text size display'),
    '#options' => array(
      t('Show current text size'),
      t('Hide current text size'),
  ),
    '#default_value' => variable_get('textsize_current', 0), // default to show current text size
    '#description' => t('By hide current text size, it shows no text and code.'),
  );
  $form['textsize_adv'] = array(
    '#type' => 'fieldset',
    '#title' => t('Advanced settings'),
    '#collapsible' => true,
    '#collapsed' => true,
  );
  $form['textsize_adv']['textsize_increment'] = array(
    '#type' => 'textfield',
    '#title' => t('Increases/decreases step'),
    '#default_value' => variable_get('textsize_increment', 10),
    '#size' => 2,
    '#field_suffix' => t('%'),
    '#maxlength' => 2,
    '#description' => t("Percentage by which each click increases/decreases the text size. The default increases/decreases step is 10&#037; and the value have to be between 1-50&#037; and a number.")
  );
  $form['textsize_adv']['textsize_normal'] = array(
    '#type' => 'textfield',
    '#title' => t('Text Size Normal'),
    '#default_value' => variable_get('textsize_normal', 100),
    '#size' => 3,
    '#field_suffix' => t('%'),
    '#maxlength' => 3,
    '#description' => t("The default normal text size is 100&#037;. The value have to be between 10-200&#037; and a number.")
  );
  $form['textsize_adv']['textsize_link_separator'] = array(
    '#type' => 'textfield',
    '#title' => t('Link separator'),
    '#default_value' => variable_get('textsize_link_separator', ' | '),
    '#size' => 8,
    '#maxlength' => 8,
    '#description' => t('If you set the links not in a list, you can enter a hidden link seperator (like &brvbar;) or leave it blank for none. Standard is " | ".')
  );
  $form['#validate'] = array(
    'textsize_validate_form' => array()
  );
  return system_settings_form($form);
}

/**
 *  Validate the administration form with drupal_validate_form
 */
function textsize_validate_form($form, &$form_state) {
  if (!is_numeric($form_state['textsize_normal'])) {
    form_set_error('textsize_normal', t('Please enter a number in "Text Size Normal".'));
  }
  if ($form_state['textsize_normal'] < 10 || $form_state['textsize_normal'] > 200) {
    form_set_error($prefix .'_default', t('Default font size setting should between 10-200&#037;.'));
  }
  if (!is_numeric($form_state['textsize_increment'])) {
    form_set_error('textsize_increment', t('Please enter a number in "Increases/decreases step".'));
  }
  if ($form_state['textsize_increment'] <= 0 || $form_state['textsize_increment'] > 50) {
    form_set_error('textsize_increment', t('Increase/decreases steps value setting should between 1-50&#037;.'));
  }
  if (is_numeric($form_state['textsize_link_separator'])) {
  form_set_error('textsize_link_separator', t('Please enter text or special characters in "Link seperator".'));
  }
}

/**
 * Generate HTML for the block
 */
function textsize_block($op='list', $delta=0) {
$textsize_list = variable_get('textsize_list', '');
$textsize_current = variable_get('textsize_current', 0);
$textsize_normal = variable_get('textsize_normal', 100);
$textsize_increment = variable_get('textsize_increment', 10);
$textsize_text = array(
    'increase' => t('Increase'),
    'decrease' => t('Decrease'),
    'normal' => t('Normal')
);
$current = array( 'text' => t('Current Size'));
$prefix = array( 'title' => t('Text Size'));


  if ($op == "list") {
    $block[0]["info"] = t("Text Size");
    return $block;
  }
  else if ($op == 'view') {
    if (user_access('access textsize content')) {
  $textsize_images = variable_get('textsize_images', 0);

  switch ($textsize_images) {
    case 0:
    $block_content = theme_textsize_html();
    break;
    case 1:
    $block_content = theme_textsize_html1();
    break;
    case 2:
    $block_content = theme_textsize_html2();
    break;
    case 3:
    $block_content = theme_textsize_html3();
    break;
    default:
    $block_content = theme_textsize_html();
  }

    // set up the block
    $block['subject'] = t('Text Size');
    $block['content'] = $block_content;
    return $block;
    }
  }
}

/**
 * Display the current text size as HTML text
 */
function textsize_current_content() {
$textsize_current = variable_get('textsize_current', 0);
$textsize_normal = variable_get('textsize_normal', 100);
$textsize = $_COOKIE['textsize'];
$current = array( 'text' => t('Current Size'));
	
  if (isset($_COOKIE['textsize'])) {
    $textsize = $_COOKIE['textsize'];
  }
  else {$textsize = $textsize_normal;
  }
  switch ($textsize_current) {
    case 0:
    $textsize_current_content = '<p>'. $current['text'] .': '. $textsize .'%</p>'."\n";
    break;
    case 1:
    $textsize_current_content = '';
    break;
    default:
    $textsize_current_content = '<p>'. $current['text'] .': '. $textsize .'%</p>'."\n";
    break;
  }
  return $textsize_current_content;
}

/**
 * Implementation of hook_theme().
 */
function textsize_html_theme() {
  return array(
    'textsize_html' => array(
      'file'      => 'textsize_html.inc',
      'template'  => 'textsize_html',
      'arguments' => array('content'),
    ),
    'textsize_html1' => array(
      'file'      => 'textsize_html1.inc',
      'template'  => 'textsize_html1',
      'arguments' => array('content'),
    ),
    'textsize_html2' => array(
      'file'      => 'textsize_html2.inc',
      'template'  => 'textsize_html2',
      'arguments' => array('content'),
    ),
    'textsize_html3' => array(
      'file'      => 'textsize_html3.inc',
      'template'  => 'textsize_html3',
      'arguments' => array('content'),
    ),
  );
}
/**
 * Theme Standard. Links in a list.
 */
function theme_textsize_html() {
$textsize_hidden = variable_get('textsize_hidden', '');
$textsize_list_inline = variable_get('textsize_list_inline', '');
$textsize_current = variable_get('textsize_current', 0);
$textsize_normal = variable_get('textsize_normal', 100);
$textsize_increment = variable_get('textsize_increment', 10);
$textsize_text = array(
    'increase' => t('Increase'),
    'decrease' => t('Decrease'),
    'normal' => t('Normal')
);
$current = array( 'text' => t('Current Size'));
$prefix = array( 'title' => t('Text Size'));

  $output = '<ul class="textsize'. $textsize_list_inline .'">'."\n";
  $output .= '<li><a title="'. $prefix['title'] .': '. $textsize_text['increase'] .'" class="icon textsize_increase" href="'. $_SERVER['PHP_SELF'] .'?textsize=+'. $textsize_increment .'" ><span class="'. $textsize_hidden .'">'. $textsize_text['increase'] .'</span></a></li>'."\n";
  $output .= '<li><a title="'. $prefix['title'] .': '. $textsize_text['decrease'] .'" class="icon textsize_decrease" href="'. $_SERVER['PHP_SELF'] .'?textsize=-'. $textsize_increment .'" ><span class="'. $textsize_hidden .'">'. $textsize_text['decrease'] .'</span></a></li>'."\n";
  $output .= '<li><a title="'. $prefix['title'] .': '. $textsize_text['normal'] .'" class="icon textsize_normal" href="'. $_SERVER['PHP_SELF'] .'?textsize_normal='. $textsize_normal .'" ><span class="'. $textsize_hidden .'">'. $textsize_text['normal'] .'</span></a></li>'."\n";
  $output .= '</ul>'."\n";
  $output .= textsize_current_content();
  return $output;
}

/**
 * Theme 1. Links not a list.
 */
function theme_textsize_html1() {
$textsize_list = variable_get('textsize_list', 0);
$textsize_list_inline = variable_get('textsize_list_inline', '');
$textsize_current = variable_get('textsize_current', 0);
$textsize_normal = variable_get('textsize_normal', 100);
$textsize_increment = variable_get('textsize_increment', 10);
$textsize_text = array(
    'increase' => t('Increase'),
    'decrease' => t('Decrease'),
    'normal' => t('Normal')
);
$current = array( 'text' => t('Current Size'));
$prefix = array( 'title' => t('Text Size'));
$textsize_link_separator = variable_get('textsize_link_separator', ' | ');

  $output = '<p class="textsize'. $textsize_list_inline .'">'."\n";
  $output .= '<a title="'. $prefix['title'] .': '. $textsize_text['increase'] .'" class="icon textsize_increase" href="'. $_SERVER['PHP_SELF'] .'?textsize=+'. $textsize_increment .'" ><span class="'. $textsize_hidden .'">'. $textsize_text['increase'] .'</span></a>';
  $output .= '<span class="display_hidden">'. $textsize_link_separator .'</span>';
  $output .= '<a title="'. $prefix['title'] .': '. $textsize_text['decrease'] .'" class="icon textsize_decrease" href="'. $_SERVER['PHP_SELF'] .'?textsize=-'. $textsize_increment .'" ><span class="'. $textsize_hidden .'">'. $textsize_text['decrease'] .'</span></a>';
  $output .= '<span class="display_hidden">'. $textsize_link_separator .'</span>';
  $output .= '<a title="'. $prefix['title'] .': '. $textsize_text['normal'] .'" class="icon textsize_normal" href="'. $_SERVER['PHP_SELF'] .'?textsize_normal='. $textsize_normal .'" ><span class="'. $textsize_hidden .'">'. $textsize_text['normal'] .'</span></a>';
  $output .= '</p>'."\n";
  $output .= textsize_current_content();
  return $output;
}

/**
 * Theme 2. Links in a list, images in the XHTML source code.
 */
function theme_textsize_html2() {
$textsize_list = variable_get('textsize_list', 0);
$textsize_list_inline = variable_get('textsize_list_inline', '');
$textsize_current = variable_get('textsize_current', 0);
$textsize_normal = variable_get('textsize_normal', 100);
$textsize_increment = variable_get('textsize_increment', 10);
$textsize_text = array(
    'increase' => t('Increase'),
    'decrease' => t('Decrease'),
    'normal' => t('Normal')
);
$current = array( 'text' => t('Current Size'));
$prefix = array( 'title' => t('Text Size'));

  $output = '<ul class="textsize'. $textsize_list_inline .'">'."\n";
  $output .= '<li><a title="'. $prefix['title'] .': '. $textsize_text['increase'] .'" class="" href="'. $_SERVER['PHP_SELF'] .'?textsize=+'. $textsize_increment .'" ><img src="modules/textsize/images/increase_16.gif" alt="'. $textsize_text['increase'] .'"></a></li>'."\n";
  $output .= '<li><a title="'. $prefix['title'] .': '. $textsize_text['decrease'] .'" class="" href="'. $_SERVER['PHP_SELF'] .'?textsize=-'. $textsize_increment .'" ><img src="modules/textsize/images/decrease_16.gif" alt="'. $textsize_text['decrease'] .'"></a></li>'."\n";
  $output .= '<li><a title="'. $prefix['title'] .': '. $textsize_text['normal'] .'" class="" href="'. $_SERVER['PHP_SELF'] .'?textsize_normal='. $textsize_normal .'" ><img src="modules/textsize/images/normal_16.gif" alt="'. $textsize_text['normal'] .'"></a></li>'."\n";
  $output .= '</ul>'."\n";
  $output .= textsize_current_content();
  return $output;
}

/**
 * Theme 3. Links not in a list, images in the XHTML source code.
 */
function theme_textsize_html3() {
$textsize_list = variable_get('textsize_list', 0);
$textsize_list_inline = variable_get('textsize_list_inline', '');
$textsize_current = variable_get('textsize_current', 0);
$textsize_normal = variable_get('textsize_normal', 100);
$textsize_increment = variable_get('textsize_increment', 10);
$textsize_text = array(
    'increase' => t('Increase'),
    'decrease' => t('Decrease'),
    'normal' => t('Normal')
);
$current = array( 'text' => t('Current Size'));
$prefix = array( 'title' => t('Text Size'));
$textsize_link_separator = variable_get('textsize_link_separator', ' | ');

  $output = '<p class="textsize'. $textsize_list_inline .'">'."\n";
  $output .= '<a title="'. $prefix['title'] .': '. $textsize_text['increase'] .'" class="" href="'. $_SERVER['PHP_SELF'] .'?textsize=+'. $textsize_increment .'" ><img src="modules/textsize/images/increase_16.gif" alt="'. $textsize_text['increase'] .'"></a>';
  $output .= '<span class="display_hidden">'. $textsize_link_separator .'</span>';
  $output .= '<a title="'. $prefix['title'] .': '. $textsize_text['decrease'] .'" class="" href="'. $_SERVER['PHP_SELF'] .'?textsize=-'. $textsize_increment .'" ><img src="modules/textsize/images/decrease_16.gif" alt="'. $textsize_text['decrease'] .'"></a>';
  $output .= '<span class="display_hidden">'. $textsize_link_separator .'</span>';
  $output .= '<a title="'. $prefix['title'] .': '. $textsize_text['normal'] .'" class="" href="'. $_SERVER['PHP_SELF'] .'?textsize_normal='. $textsize_normal .'" ><img src="modules/textsize/images/normal_16.gif" alt="'. $textsize_text['normal'] .'"></a>';
  $output .= '</p>'."\n";
  $output .= textsize_current_content();
  return $output;
}

/**
 * Set the cookie
 */
function textsize_setcookie($ps1) {
$referer = $_SERVER['HTTP_REFERER'];
setcookie("textsize", $ps1, time()+31536000, "/", "");
}

/**
 * Check if is set a cookie
 */
function textsize_ifcookie() {
$referer = $_SERVER['HTTP_REFERER'];
$textsize_normal = variable_get('textsize_normal', 100);
  if (isset($_COOKIE['textsize'])) {
  }
  else {
    textsize_setcookie($textsize_normal);
  }
}
textsize_ifcookie();

/**
 * Handle the user specific settings.
 */
function textsize_user() {
$textsize = $_COOKIE['textsize'];
$textsize_normal = variable_get('textsize_normal', 100);
$textsize_increment = variable_get('textsize_increment', 10);
$referer = $_SERVER['HTTP_REFERER'];
$set = $_GET["textsize"];

  if ($_GET["textsize"]) {
    $set = $textsize + $_GET["textsize"] ;
    textsize_setcookie($set);
    header("Location: $referer");
  }
  else if ($_GET["textsize_normal"]) {
    $set = $textsize_normal ;
    textsize_setcookie($set);
    header("Location: $referer");
  }
}
textsize_user();

/**
 * Print HTMl code in the head
 */
function textsize_printhtml() {
$host  = $_SERVER['HTTP_HOST'];
$uri  = rtrim(dirname($_SERVER['PHP_SELF']), '/\\');
//global $textsize;
$textsize_normal = variable_get('textsize_normal', 100);

if (isset($_COOKIE['textsize'])) {
$textsize = $_COOKIE['textsize'];
$textsize_head = '<style type="text/css" media="screen, projection, tty, tv, print">
<!--
/* <![CDATA[ */
body {
  font-size: '. $textsize .'% !important;
}
/* ]]>*/
-->
</style>';

drupal_set_html_head($textsize_head);
}
else {
  $textsize = $textsize_normal;
  $textsize_head = '<style type="text/css" media="screen, projection, tty, tv, print">
<!--
/* <![CDATA[ */
body {
  font-size: '. $textsize .'% !important;
}
/* ]]>*/
-->
</style>';
  drupal_set_html_head($textsize_head);
}
drupal_add_css(drupal_get_path('module', 'textsize') .'/textsize.css');
}
textsize_printhtml();